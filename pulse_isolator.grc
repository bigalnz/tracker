options:
  parameters:
    author: Derek Kozel
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: 'Heavily derived from Andy Walls'' answer to

      https://dsp.stackexchange.com/questions/50103/checking-for-vhf-pulse-with-sdr-and-python'
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: wildlife_tracker
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Wildlife Tracker
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: max_freq
  id: variable_qtgui_entry
  parameters:
    comment: ''
    gui_hint: ''
    label: Max Tone Frequency
    type: real
    value: '2000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 700.0]
    rotation: 0
    state: true
- name: min_freq
  id: variable_qtgui_entry
  parameters:
    comment: ''
    gui_hint: ''
    label: Min Tone Frequency
    type: real
    value: '1000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 576.0]
    rotation: 0
    state: true
- name: pulse_len
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Pulse Length (samples)
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '1'
    step: '1'
    stop: '200'
    value: '156'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 592.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: int(2.4e6)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: variable_qtgui_entry_0
  id: variable_qtgui_entry
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    type: int
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1384, 104.0]
    rotation: 0
    state: true
- name: analog_pll_refout_cc_0
  id: analog_pll_refout_cc
  parameters:
    affinity: ''
    alias: ''
    comment: 'Find the strongest tone

      and generate a clean version'
    max_freq: max_freq*2*np.pi/samp_rate
    maxoutbuf: '0'
    min_freq: min_freq*2*np.pi/samp_rate
    minoutbuf: '0'
    w: '0.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 524.0]
    rotation: 0
    state: true
- name: blocks_char_to_float_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 400.0]
    rotation: 0
    state: true
- name: blocks_complex_to_mag_0
  id: blocks_complex_to_mag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 512.0]
    rotation: 0
    state: true
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 176.0]
    rotation: 0
    state: true
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: pulse_len
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 480.0]
    rotation: 0
    state: true
- name: blocks_multiply_conjugate_cc_0
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 496.0]
    rotation: 0
    state: true
- name: blocks_peak_detector2_fb_0
  id: blocks_peak_detector2_fb
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.001'
    comment: ''
    look_ahead: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold_factor_rise: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 512.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 184.0]
    rotation: 0
    state: true
- name: blocks_wavfile_source_0
  id: blocks_wavfile_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    file: D:\baseband_160991830Hz_10-45-33_26-11-2023 Rotoroa.wav
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '2'
    repeat: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 180.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded\
      \ Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self,\
      \ threshold=0.9, report_period=128):  # only default arguments here\n      \
      \  \"\"\"arguments to this function show up as parameters in GRC\"\"\"\n   \
      \     gr.sync_block.__init__(\n            self,\n            name='Interval_Tagger',\
      \   # will show up in GRC\n            in_sig=[np.float32],\n            out_sig=[np.float32]\n\
      \        )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.threshold\
      \ = threshold\n        self.my_log = gr.logger(self.alias())\n        self.timer\
      \ = 0\n        self.report_period = report_period\n        self.readyForTag\
      \ = True\n\n\n    def work(self, input_items, output_items):\n\n        for\
      \ index in range(len(input_items[0])):\n            if input_items[0][index]\
      \ > 0.95:\n                key = pmt.intern('index')\n                value\
      \ = pmt.from_float(np.round(float(input_items[0][index]),2))\n             \
      \   writeIndex = self.nitems_written(0) + index-1\n                #print(f\"\
      Index: {writeIndex}\")\n                #print(f\"Value: {value}\")        \
      \    \n                self.add_item_tag(0, writeIndex, key, value ) \n\n  \
      \      output_items[0][:] = input_items[0]\n        return len(output_items[0])\n"
    affinity: ''
    alias: index
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    report_period: '128'
    threshold: '0.5'
  states:
    _io_cache: ('Interval_Tagger', 'blk', [('threshold', '0.9'), ('report_period',
      '128')], [('0', 'float', 1)], [('0', 'float', 1)], 'Embedded Python Block example
      - a simple multiply const', ['report_period', 'threshold'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1344, 304.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ blk(gr.sync_block):\n\n    def __init__(self, key_filter=\"index\"):\n   \
      \     gr.sync_block.__init__(\n            self,\n            name=\"Tag Delta\"\
      ,\n            in_sig=[np.float32],\n            out_sig=[np.float32]\n    \
      \    )\n        self.key_filter = key_filter\n        self.last_tag_offset =\
      \ 0\n\n    def work(self, input_items, output_items):\n        output_items[0][:]\
      \ = input_items[0]\n\n        tags = self.get_tags_in_window(0, 0, len(input_items[0]),\
      \ pmt.intern(self.key_filter))\n        for tag in tags:\n            delta_in_samps\
      \ = tag.offset - self.last_tag_offset\n            self.add_item_tag(0, tag.offset,\
      \ pmt.intern(\"delta\"),\\\n                pmt.from_long(delta_in_samps))\n\
      \            self.last_tag_offset = tag.offset\n            print(f\"delta in\
      \ offset (samples) : {delta_in_samps}\")\n            samp_time = 1/585.97\n\
      \            ppm = (585.938/delta_in_samps)*60\n            print(f\"PPM = {ppm}\"\
      )\n        return len(output_items[0])"
    affinity: ''
    alias: ''
    comment: ''
    key_filter: '"index"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Tag Delta', 'blk', [('key_filter', "'index'")], [('0', 'float', 1)],
      [('0', 'float', 1)], '', ['key_filter'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1520, 312.0]
    rotation: 0
    state: true
- name: fir_filter_xxx_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: 600 kS/s -> 75 kS/s
    decim: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: firdes.low_pass(1,600e3,600e3/(2*8), 1000)
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 308.0]
    rotation: 0
    state: true
- name: fir_filter_xxx_0_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: 75 kS/s -> 9.375 kS/s
    decim: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: firdes.low_pass(1,75e3,75e3/(2*4), 1000)
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [776, 308.0]
    rotation: 0
    state: true
- name: freq_xlating_fir_filter_xxx_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '-670280'
    comment: 2.4 MS/s -> 600 kS/s
    decim: '4'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    taps: firdes.low_pass(1,samp_rate,samp_rate/(2*4), 1000)
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 292.0]
    rotation: 0
    state: true
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 12.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: First output
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 152.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_2
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Second time sink at end
    nconnections: '2'
    size: '1024'
    srate: '585.9375'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 656.0]
    rotation: 0
    state: true
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '16'
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 592.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: signal
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1104, 316.0]
    rotation: 0
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: file_cf32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 184.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: signal
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 484.0]
    rotation: 0
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: 'Reduce the sample rate to make

      computation lighter and

      plots easier to see'
    stream_id: file_cf32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 300.0]
    rotation: 0
    state: true

connections:
- [analog_pll_refout_cc_0, '0', blocks_multiply_conjugate_cc_0, '1']
- [blocks_char_to_float_0, '0', epy_block_0, '0']
- [blocks_complex_to_mag_0, '0', rational_resampler_xxx_0, '0']
- [blocks_float_to_complex_0, '0', blocks_throttle_0, '0']
- [blocks_moving_average_xx_0, '0', blocks_complex_to_mag_0, '0']
- [blocks_multiply_conjugate_cc_0, '0', blocks_moving_average_xx_0, '0']
- [blocks_peak_detector2_fb_0, '0', blocks_char_to_float_0, '0']
- [blocks_throttle_0, '0', virtual_sink_1, '0']
- [blocks_wavfile_source_0, '0', blocks_float_to_complex_0, '0']
- [blocks_wavfile_source_0, '1', blocks_float_to_complex_0, '1']
- [epy_block_0, '0', epy_block_1, '0']
- [epy_block_1, '0', qtgui_time_sink_x_2, '0']
- [fir_filter_xxx_0, '0', fir_filter_xxx_0_0, '0']
- [fir_filter_xxx_0_0, '0', qtgui_time_sink_x_1, '0']
- [fir_filter_xxx_0_0, '0', virtual_sink_0, '0']
- [freq_xlating_fir_filter_xxx_0, '0', fir_filter_xxx_0, '0']
- [rational_resampler_xxx_0, '0', blocks_peak_detector2_fb_0, '0']
- [rational_resampler_xxx_0, '0', qtgui_time_sink_x_2, '1']
- [virtual_source_0, '0', analog_pll_refout_cc_0, '0']
- [virtual_source_0, '0', blocks_multiply_conjugate_cc_0, '0']
- [virtual_source_1, '0', freq_xlating_fir_filter_xxx_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.3.0
